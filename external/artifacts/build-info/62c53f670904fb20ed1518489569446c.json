{
	"id": "62c53f670904fb20ed1518489569446c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"ccc/external/DelegateProxy.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n// Copied from: https://github.com/aragon/aragonOS/blob/940605977685cc9ad5ee85d67a6c310e3e8aab24/contracts/common/DelegateProxy.sol\npragma solidity ^0.8.0;\n\ncontract DelegateProxy {\n\n  /**\n   * @dev Performs a delegatecall and returns whatever the delegatecall returned (entire context execution will return!)\n   * @param _dst Destination address to perform the delegatecall\n   * @param _calldata Calldata for the delegatecall\n   */\n  function delegatedFwd(address _dst, bytes memory _calldata) internal {\n    require(isContract(_dst), \"dst is not contract\");\n    assembly {\n      let result := delegatecall(sub(gas(), 10000), _dst, add(_calldata, 0x20), mload(_calldata), 0, 0)\n        let size := returndatasize()\n\n        let ptr := mload(0x40)\n        returndatacopy(ptr, 0, size)\n\n        // revert instead of invalid() bc if the underlying call failed with invalid() it already wasted gas.\n        // if the call returned error data, forward it\n        switch result case 0 {revert(ptr, size)}\n      default {return (ptr, size)}\n    }\n  }\n\n  function isContract(address _target) internal view returns (bool) {\n    uint256 size;\n    assembly {size := extcodesize(_target)}\n    return size > 0;\n  }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ccc/external/DelegateProxy.sol": {
				"DelegateProxy": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ccc/external/DelegateProxy.sol\":193:1240  contract DelegateProxy {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ccc/external/DelegateProxy.sol\":193:1240  contract DelegateProxy {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207cda0f2ddcc51146b71cd63818351245719d9e7ea84d6230dc271ad221a988c464736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212207cda0f2ddcc51146b71cd63818351245719d9e7ea84d6230dc271ad221a988c464736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0xDA0F2DDCC51146B71CD63818351245719D9E7EA84D6230DC271AD221A9 DUP9 0xC4 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "193:1047:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212207cda0f2ddcc51146b71cd63818351245719d9e7ea84d6230dc271ad221a988c464736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0xDA0F2DDCC51146B71CD63818351245719D9E7EA84D6230DC271AD221A9 DUP9 0xC4 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "193:1047:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"delegatedFwd(address,bytes memory)": "infinite",
								"isContract(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 193,
									"end": 1240,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 193,
									"end": 1240,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 193,
									"end": 1240,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 193,
									"end": 1240,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 193,
									"end": 1240,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 193,
									"end": 1240,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 193,
									"end": 1240,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 193,
									"end": 1240,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 193,
									"end": 1240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 193,
									"end": 1240,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 193,
									"end": 1240,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 193,
									"end": 1240,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 193,
									"end": 1240,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 193,
									"end": 1240,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 193,
									"end": 1240,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 193,
									"end": 1240,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 193,
									"end": 1240,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 193,
									"end": 1240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 193,
									"end": 1240,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 193,
									"end": 1240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 193,
									"end": 1240,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207cda0f2ddcc51146b71cd63818351245719d9e7ea84d6230dc271ad221a988c464736f6c63430008120033",
									".code": [
										{
											"begin": 193,
											"end": 1240,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 193,
											"end": 1240,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 193,
											"end": 1240,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 193,
											"end": 1240,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 193,
											"end": 1240,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 193,
											"end": 1240,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"ccc/external/DelegateProxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ccc/external/DelegateProxy.sol\":\"DelegateProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ccc/external/DelegateProxy.sol\":{\"keccak256\":\"0xd7a7a77e0ac8dfe7e5b2c87709cec2005a0b73f8cac684b4b0ae98adc5c8e091\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bf56d233ad3417d3e903afe766786ac23bf4f3370ecb94d308085f9a8802ebcb\",\"dweb:/ipfs/QmZVJ8BUyXS27SxsPZbWc9mMHkyzkdL8YcaiAnd5cSjN84\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"ccc/external/DelegateProxy.sol": {
				"ast": {
					"absolutePath": "ccc/external/DelegateProxy.sol",
					"exportedSymbols": {
						"DelegateProxy": [
							35
						]
					},
					"id": 36,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "168:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DelegateProxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 35,
							"linearizedBaseContracts": [
								35
							],
							"name": "DelegateProxy",
							"nameLocation": "202:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "540:540:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 11,
																	"name": "_dst",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4,
																	"src": "565:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 10,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 34,
																"src": "554:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 12,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "554:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "647374206973206e6f7420636f6e7472616374",
															"id": 13,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "572:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c4f7214cc12ab08a3a05c2b290d33f49466e855453dca90c70f8a4af12229006",
																"typeString": "literal_string \"dst is not contract\""
															},
															"value": "dst is not contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c4f7214cc12ab08a3a05c2b290d33f49466e855453dca90c70f8a4af12229006",
																"typeString": "literal_string \"dst is not contract\""
															}
														],
														"id": 9,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "546:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "546:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 15,
												"nodeType": "ExpressionStatement",
												"src": "546:48:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "609:467:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "617:97:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "gas",
																					"nodeType": "YulIdentifier",
																					"src": "648:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "648:5:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "655:5:0",
																				"type": "",
																				"value": "10000"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "644:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "644:17:0"
																	},
																	{
																		"name": "_dst",
																		"nodeType": "YulIdentifier",
																		"src": "663:4:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_calldata",
																				"nodeType": "YulIdentifier",
																				"src": "673:9:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "684:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "669:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "669:20:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_calldata",
																				"nodeType": "YulIdentifier",
																				"src": "697:9:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "691:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "691:16:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "709:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "712:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nodeType": "YulIdentifier",
																	"src": "631:12:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "631:83:0"
															},
															"variables": [
																{
																	"name": "result",
																	"nodeType": "YulTypedName",
																	"src": "621:6:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "723:28:0",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "735:14:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "735:16:0"
															},
															"variables": [
																{
																	"name": "size",
																	"nodeType": "YulTypedName",
																	"src": "727:4:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "761:22:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "778:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "772:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "772:11:0"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nodeType": "YulTypedName",
																	"src": "765:3:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "807:3:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "812:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "815:4:0"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "792:14:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "792:28:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "792:28:0"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1016:19:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "1024:3:0"
																						},
																						{
																							"name": "size",
																							"nodeType": "YulIdentifier",
																							"src": "1029:4:0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "1017:6:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1017:17:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1017:17:0"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1009:26:0",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1014:1:0",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1050:20:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "1059:3:0"
																						},
																						{
																							"name": "size",
																							"nodeType": "YulIdentifier",
																							"src": "1064:4:0"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1051:18:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1051:18:0"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1042:28:0",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nodeType": "YulIdentifier",
																"src": "1002:6:0"
															},
															"nodeType": "YulSwitch",
															"src": "995:75:0"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 6,
														"isOffset": false,
														"isSlot": false,
														"src": "673:9:0",
														"valueSize": 1
													},
													{
														"declaration": 6,
														"isOffset": false,
														"isSlot": false,
														"src": "697:9:0",
														"valueSize": 1
													},
													{
														"declaration": 4,
														"isOffset": false,
														"isSlot": false,
														"src": "663:4:0",
														"valueSize": 1
													}
												],
												"id": 16,
												"nodeType": "InlineAssembly",
												"src": "600:476:0"
											}
										]
									},
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "221:247:0",
										"text": " @dev Performs a delegatecall and returns whatever the delegatecall returned (entire context execution will return!)\n @param _dst Destination address to perform the delegatecall\n @param _calldata Calldata for the delegatecall"
									},
									"id": 18,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegatedFwd",
									"nameLocation": "480:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "_dst",
												"nameLocation": "501:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "493:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "_calldata",
												"nameLocation": "520:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "507:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 5,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "507:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:38:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "540:0:0"
									},
									"scope": 35,
									"src": "471:609:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "1150:88:0",
										"statements": [
											{
												"assignments": [
													26
												],
												"declarations": [
													{
														"constant": false,
														"id": 26,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "1164:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 33,
														"src": "1156:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 25,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1156:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 27,
												"nodeType": "VariableDeclarationStatement",
												"src": "1156:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1183:30:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1184:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "_target",
																		"nodeType": "YulIdentifier",
																		"src": "1204:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1192:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1192:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1184:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 20,
														"isOffset": false,
														"isSlot": false,
														"src": "1204:7:0",
														"valueSize": 1
													},
													{
														"declaration": 26,
														"isOffset": false,
														"isSlot": false,
														"src": "1184:4:0",
														"valueSize": 1
													}
												],
												"id": 28,
												"nodeType": "InlineAssembly",
												"src": "1174:39:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 29,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "1225:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 30,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1232:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1225:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 24,
												"id": 32,
												"nodeType": "Return",
												"src": "1218:15:0"
											}
										]
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1093:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "_target",
												"nameLocation": "1112:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1104:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:17:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1144:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 22,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1144:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1143:6:0"
									},
									"scope": 35,
									"src": "1084:154:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 36,
							"src": "193:1047:0",
							"usedErrors": []
						}
					],
					"src": "168:1073:0"
				},
				"id": 0
			}
		}
	}
}